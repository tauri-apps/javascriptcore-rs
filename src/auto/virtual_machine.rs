// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files.git)
// DO NOT EDIT

use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "JSCVirtualMachine")]
    pub struct VirtualMachine(Object<ffi::JSCVirtualMachine, ffi::JSCVirtualMachineClass>);

    match fn {
        type_ => || ffi::jsc_virtual_machine_get_type(),
    }
}

impl VirtualMachine {
    #[doc(alias = "jsc_virtual_machine_new")]
    pub fn new() -> VirtualMachine {
        unsafe {
            from_glib_full(ffi::jsc_virtual_machine_new())
        }
    }
}

impl Default for VirtualMachine {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_VIRTUAL_MACHINE: Option<&VirtualMachine> = None;

impl fmt::Display for VirtualMachine {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("VirtualMachine")
    }
}
